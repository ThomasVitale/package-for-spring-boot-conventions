#@ load("@ytt:data", "data")

---
apiVersion: v1
kind: Namespace
metadata:
  name: #@ data.values.namespace

---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: spring-boot-selfsigned-issuer
  namespace: #@ data.values.namespace
spec:
  selfSigned: {}

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: spring-boot-webhook-cert
  namespace: #@ data.values.namespace
spec:
  subject:
    organizations:
      - Kadras
  commonName: #@ "spring-boot-webhook." + data.values.namespace + ".svc"
  dnsNames:
    - #@ "spring-boot-webhook." + data.values.namespace + ".svc"
    - #@ "spring-boot-webhook." + data.values.namespace + ".svc.cluster.local"
  issuerRef:
    kind: Issuer
    name: spring-boot-selfsigned-issuer
  secretName: spring-boot-webhook-cert
  revisionHistoryLimit: 10

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-webhook
  namespace: #@ data.values.namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-boot-webhook
  template:
    metadata:
      labels:
        app: spring-boot-webhook
    spec:
      containers:
      - name: webhook
        image: ghcr.io/kadras-io/spring-boot-conventions@sha256:f112ba84a726c140aa938a2615f58f4729c719016bb4599bdf9c1c8da264f754
        env:
          - name: PORT
            value: "8443"
        ports:
          - containerPort: 8443
            name: webhook
        livenessProbe:
          httpGet:
            scheme: HTTPS
            port: webhook
            path: /healthz
        readinessProbe:
          httpGet:
            scheme: HTTPS
            port: webhook
            path: /healthz
        resources:
          limits:
            cpu: #@ data.values.resources.limits.cpu
            memory: #@ data.values.resources.limits.memory
          requests:
            cpu: #@ data.values.resources.requests.cpu
            memory: #@ data.values.resources.requests.memory
        volumeMounts:
          - name: certs
            mountPath: /config/certs
            readOnly: true
      volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: spring-boot-webhook-cert

---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-webhook
  namespace: #@ data.values.namespace
spec:
  selector:
    app: spring-boot-webhook
  ports:
    - protocol: TCP
      port: 443
      targetPort: webhook

---
apiVersion: conventions.carto.run/v1alpha1
kind: ClusterPodConvention
metadata:
  name: spring-boot-convention
spec:
  webhook:
    certificate:
      name: spring-boot-webhook-cert
      namespace: #@ data.values.namespace
    clientConfig:
      service:
        name: spring-boot-webhook
        namespace: #@ data.values.namespace
